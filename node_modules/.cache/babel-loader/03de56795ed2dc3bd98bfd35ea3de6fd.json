{"ast":null,"code":"import React, { useEffect } from 'react';\nimport WebFont from 'webfontloader';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Font = function Font(props) {\n  return React.createElement(\"div\", {\n    style: styleGen(props)\n  }, React.createElement(FontLoader, Object.assign({}, props)), props.children);\n};\n\nvar Text = function Text(props) {\n  return React.createElement(\"p\", Object.assign({}, _extends({}, Object.keys(props).reduce(function (object, key) {\n    if (!['family', 'italic', 'weight', 'onLoad', 'onError', 'onAllLoad', 'onAllError'].includes(key)) {\n      object[key] = props[key];\n    }\n\n    return object;\n  }, {})), {\n    style: _extends({}, styleGen(props), props.style)\n  }), React.createElement(FontLoader, Object.assign({}, props, {\n    text: props.children\n  })), props.children);\n};\n\nvar FontLoader = function FontLoader(_ref) {\n  var family = _ref.family,\n      _ref$weight = _ref.weight,\n      weight = _ref$weight === void 0 ? 400 : _ref$weight,\n      _ref$italic = _ref.italic,\n      italic = _ref$italic === void 0 ? false : _ref$italic,\n      _ref$provider = _ref.provider,\n      provider = _ref$provider === void 0 ? 'google' : _ref$provider,\n      _ref$onLoad = _ref.onLoad,\n      onLoad = _ref$onLoad === void 0 ? function () {} : _ref$onLoad,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? function () {} : _ref$onError,\n      _ref$onAllLoad = _ref.onAllLoad,\n      onAllLoad = _ref$onAllLoad === void 0 ? function () {} : _ref$onAllLoad,\n      _ref$onAllError = _ref.onAllError,\n      onAllError = _ref$onAllError === void 0 ? function () {} : _ref$onAllError,\n      _ref$text = _ref.text,\n      text = _ref$text === void 0 ? undefined : _ref$text;\n  useEffect(function () {\n    var WebFontConfig = {\n      classes: false,\n      fontactive: onLoad,\n      fontinactive: onError,\n      active: onAllLoad,\n      inactive: onAllError\n    };\n\n    if (provider === 'google') {\n      var fontFamily = GoogleFont({\n        family: family,\n        weight: weight,\n        italic: italic\n      });\n      WebFontConfig.google = {\n        families: [fontFamily],\n        text: text\n      };\n    } else if (provider === 'local') {\n      WebFontConfig.custom = {\n        families: [family]\n      };\n    }\n\n    WebFont.load(WebFontConfig);\n  }, [family, weight, italic, provider, onLoad, onError]);\n  return null;\n};\n\nvar GoogleFont = function GoogleFont(_ref2) {\n  var family = _ref2.family,\n      _ref2$weight = _ref2.weight,\n      weight = _ref2$weight === void 0 ? 400 : _ref2$weight,\n      _ref2$italic = _ref2.italic,\n      italic = _ref2$italic === void 0 ? false : _ref2$italic;\n  var encodedURL = encodeURIComponent(family);\n\n  if (weight !== 400 && italic) {\n    encodedURL += \":bi\";\n  } else if (weight !== 400) {\n    encodedURL += \":\" + weight;\n  } else if (italic) {\n    encodedURL += \":i\";\n  }\n\n  return encodedURL;\n};\n\nvar styleGen = function styleGen(_ref3) {\n  var family = _ref3.family,\n      italic = _ref3.italic,\n      weight = _ref3.weight;\n  return {\n    fontFamily: \"'\" + family + \"'\",\n    fontStyle: italic ? 'italic' : undefined,\n    fontWeight: weight\n  };\n};\n\nexport default Font;\nexport { FontLoader, Text };","map":null,"metadata":{},"sourceType":"module"}